name: Build

on:
  push:
    branches: [ master, test-actions ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            test: true
            cross: false
          - os: windows-latest
            target: i686-pc-windows-msvc
            test: true
            cross: false
          - os: macos-latest
            target: x86_64-apple-darwin
            test: true
            cross: false
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            test: true
            cross: false
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            test: true
            cross: false
    steps:
    - name: Git config
      if: ${{ matrix.config.os == 'windows-latest' }}
      run: git config --global core.autocrlf input
    - uses: actions/checkout@v2
    - name: Install musl tools
      if: ${{ matrix.config.target == 'x86_64-unknown-linux-musl' }}
      run: sudo apt-get install musl-tools musl-dev
    - name: Checkout submodule
      run: git submodule update --init --recursive
    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.config.target }}
        override: true
        components: rustfmt, clippy
    - name: Cache dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-cargo
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.crate') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
    - name: Cache target
      uses: actions/cache@v2
      env:
        cache-name: cache-target
      with:
        path: target
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.config.target }}-${{ hashFiles('**/*.o') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.config.target }}
    - name: Test all
      if: ${{ matrix.config.test }}
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --target ${{ matrix.config.target }}
